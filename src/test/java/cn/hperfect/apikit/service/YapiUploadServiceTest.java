package cn.hperfect.apikit.service;

import cn.hperfect.apikit.core.model.ApiCat;
import cn.hperfect.apikit.core.model.ApiModel;
import cn.hperfect.apikit.core.model.BaseApiPropNode;
import cn.hperfect.apikit.core.model.type.ApiEnumPropNode;
import cn.hperfect.apikit.core.model.type.ApiListPropNode;
import cn.hperfect.apikit.service.platform.yapi.YapiUploadService;
import cn.hperfect.apikit.settings.AppSettingsState;
import cn.hutool.core.util.SerializeUtil;
import junit.framework.TestCase;
import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

public class YapiUploadServiceTest extends TestCase {

    @Test
    public void test() {
        YapiUploadService service = new YapiUploadService(null);
        ApiCat apiCat = new ApiCat();
        apiCat.setCatName("test name");
        apiCat.setCatDesc("test desc");
        service.upload(apiCat);
    }


    @Test
    public void testOuput() throws DecoderException {
        String a = "{\"type\":\"object\",\"properties\":{\"msg\":{\"type\":\"string\",\"title\":\"msg\",\"description\":\" 返回处理消息\"},\"enums\":{\"type\":\"string\",\"title\":\"enums\",\"description\":\"enums desc\",\"enum\":[\"TE\"]},\"total\":{\"type\":\"number\",\"title\":\"total\"},\"code\":{\"type\":\"number\",\"title\":\"code\",\"description\":\" 返回代码\"},\"data\":{\"type\":\"object\",\"properties\":{\"price\":{\"type\":\"number\",\"title\":\"price\"},\"description\":{\"type\":\"string\",\"title\":\"description\"},\"id\":{\"type\":\"number\",\"title\":\"id\"}},\"title\":\"data\",\"description\":\" 返回数据对象 data\"},\"list\":{\"type\":\"array\",\"title\":\"list\",\"description\":\"list\",\"items\":{\"type\":\"object\",\"properties\":{}}},\"timestamp\":{\"type\":\"number\",\"title\":\"timestamp\",\"description\":\" 时间戳\"}}}";
        System.out.println(a);

    }
    @Test
    public void testUpload() throws DecoderException {
        getSetting();


        String hex = "aced000573720024636e2e68706572666563742e6170696b69742e636f72652e6d6f64656c2e417069436174e116fd1a888e96cc0200054c00096170694d6f64656c737400104c6a6176612f7574696c2f4c6973743b4c0007636174446573637400124c6a6176612f6c616e672f537472696e673b4c00076361744e616d6571007e00024c00086368696c6472656e71007e00014c00047061746871007e00017870737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a6578700000000177040000000173720026636e2e68706572666563742e6170696b69742e636f72652e6d6f64656c2e4170694d6f64656cffffffffffffffff0200084c0007617069547970657400224c636e2f68706572666563742f6170696b69742f656e756d732f417069547970653b4c0004626f647974002f4c636e2f68706572666563742f6170696b69742f636f72652f6d6f64656c2f4261736541706950726f704e6f64653b4c000a646570726563617465647400134c6a6176612f6c616e672f426f6f6c65616e3b4c00046465736371007e00024c00046e616d6571007e00024c00047061746871007e00024c0005717565727971007e00014c000a726573756c745479706571007e000878707e720020636e2e68706572666563742e6170696b69742e656e756d732e4170695479706500000000000000001200007872000e6a6176612e6c616e672e456e756d0000000000000000120000787074000347455470737200116a6176612e6c616e672e426f6f6c65616ecd207280d59cfaee0200015a000576616c7565787001740009746573744a736f6e57740009746573744a736f6e57740009746573744a736f6e577371007e0004000000007704000000007873720034636e2e68706572666563742e6170696b69742e636f72652e6d6f64656c2e747970652e4170694f626a65637450726f704e6f6465b50e28c5f21667b70200007872002d636e2e68706572666563742e6170696b69742e636f72652e6d6f64656c2e4261736541706950726f704e6f646574641a23900866960200095a000a646570726563617465645a000872657175697265644c000c64656661756c7456616c75657400124c6a6176612f6c616e672f4f626a6563743b4c00046465736371007e00024c00076578616d706c6571007e00024c00086d6f636b4578707271007e00024c00046e616d6571007e00024c000e706172616d4d6f64656c4c69737471007e00014c0004747970657400274c636e2f68706572666563742f6170696b69742f656e756d732f417069506172616d547970653b7870000070707070707371007e00040000000577040000000573720037636e2e68706572666563742e6170696b69742e636f72652e6d6f64656c2e747970652e4170695072696d697469766550726f704e6f6465e7b6c014e4cc1c2b0200014c000d7072696d6974697665547970657400274c636e2f68706572666563742f6170696b69742f636f6e732f5072696d6974697665547970653b7871007e001600007074001320e8bf94e59b9ee5a484e79086e6b688e681af70707400036d73677371007e000400000000770400000000787e720025636e2e68706572666563742e6170696b69742e656e756d732e417069506172616d5479706500000000000000001200007871007e000c740006535452494e477e720025636e2e68706572666563742e6170696b69742e636f6e732e5072696d69746976655479706500000000000000001200007871007e000c740006535452494e477371007e001b00007074000d20e8bf94e59b9ee4bba3e7a0817070740004636f64657371007e000400000000770400000000787e71007e0021740003494e547e71007e0024740003494e547371007e001500007074001820e8bf94e59b9ee695b0e68daee5afb9e8b1a120646174617070740004646174617371007e0004000000037704000000037371007e001b00007070707074000269647371007e000400000000770400000000787e71007e00217400044c4f4e477e71007e00247400044c4f4e477371007e001b00007070707074000570726963657371007e0004000000007704000000007871007e002b71007e002d7371007e001b00007070707074000b6465736372697074696f6e7371007e0004000000007704000000007871007e002271007e0025787e71007e00217400064f424a4543547371007e001b00007074000a20e697b6e997b4e688b3707074000974696d657374616d707371007e0004000000007704000000007871007e003671007e00387371007e001b000070707070740005746f74616c7371007e0004000000007704000000007871007e002b71007e002d7871007e00407874000074000e54657374436f6e74726f6c6c6572707371007e00040000000077040000000078";
        ApiCat apiCat = SerializeUtil.deserialize(Hex.decodeHex(hex));
        ApiModel apiModel = apiCat.getApiModels().get(0);
        BaseApiPropNode resultType = apiModel.getResultType();
        List<BaseApiPropNode> paramModelList = resultType.getParamModelList();


        ApiListPropNode list = new ApiListPropNode();
        list.setName("list");
        list.setDesc("list");

        paramModelList.add(list);
        List<ApiEnumPropNode.EnumValue> values = new ArrayList<>();
        values.add(new ApiEnumPropNode.EnumValue("ONE", "one desc"));
        values.add(new ApiEnumPropNode.EnumValue("TOW", "this is tow"));
        ApiEnumPropNode enumPropNode = new ApiEnumPropNode(values);
        enumPropNode.setName("enums");
        enumPropNode.setDesc("enums desc");

        paramModelList.add(enumPropNode);


        List<BaseApiPropNode> query = apiModel.getQuery();
        query.add(enumPropNode);

        YapiUploadService service = new YapiUploadService(null);
        service.upload(apiCat);

    }

    private static AppSettingsState getSetting() {
        AppSettingsState settings = new AppSettingsState();
        return settings;
    }


}
